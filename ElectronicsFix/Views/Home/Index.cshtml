@model ElectronicsFix.Models.HomeIndexViewModel

@{
	ViewData["Title"] = "Home Page";
}

@{
	int days = ViewBag.Days;
	int hours = ViewBag.Hours;
	int minutes = ViewBag.Minutes;
	int seconds = ViewBag.Seconds;

	IEnumerable<ElectronicsFix.Models.TopSelling> topSelling = ViewBag.TopSelling;
}
<style>
	.product {
		height: 400px;
		display: flex;
		flex-direction: column;
		justify-content: space-between;
	}

	.product-body {
		flex-grow: 1;
		display: flex;
		flex-direction: column;
		justify-content: space-between;
	}

	.product-img img {
		width: 100%;
		height: 200px;
		object-fit: cover;
	}
</style>

<!-- SECTION -->
<div id="cats" class="section">
	<!-- container -->
	<div class="container">
		<!-- row -->
		<div class="row">
			<!-- shop -->
			<div class="col-md-4 col-xs-6">
				<div class="shop">
					<div class="shop-img">
						<img src="~/img/shop01.png" alt="">
					</div>
					<div class="shop-body">
						<h3>Laptop<br>Collection</h3>
						<a asp-action="Index" asp-controller="Store" asp-route-category="Laptop" class="cta-btn">
							Shop now<i class="fa fa-arrow-circle-right"></i>
						</a>
					</div>
				</div>
			</div>
			<!-- /shop -->
			<!-- shop -->
			<div class="col-md-4 col-xs-6">
				<div class="shop">
					<div class="shop-img">
						<img src="~/img/shop03.png" alt="">
					</div>
					<div class="shop-body">
						<h3>Accessories<br>Collection</h3>
						<a asp-action="Index" asp-controller="Store" asp-route-category="Accessory" class="cta-btn">
							Shop now <i class="fa fa-arrow-circle-right"></i>
						</a>
					</div>
				</div>
			</div>
			<!-- /shop -->
			<!-- shop -->
			<div class="col-md-4 col-xs-6">
				<div class="shop">
					<div class="shop-img">
						<img src="~/img/pc.jpg" alt="">
					</div>
					<div class="shop-body">
						<h3>PCs<br>Collection</h3>
						<a asp-action="Index" asp-controller="Store" asp-route-category="PC" class="cta-btn">
							Shop now <i class="fa fa-arrow-circle-right"></i>
						</a>
					</div>
				</div>
			</div>
			<!-- /shop -->
		</div>
		<!-- /row -->
	</div>
	<!-- /container -->
</div>
<!-- /SECTION -->
<!-- SECTION -->
<div class="section">
	<!-- container -->
	<div class="container">
		<!-- row -->
		<div class="row">

			<!-- section title -->
			<div class="col-md-12">
				<div class="section-title">
					<h3 id="new" class="title">New Products</h3>
					@* <div class="section-nav">
						<ul class="section-tab-nav tab-nav">

							<li class="active"><a data-toggle="tab" href="#tab1">Laptops</a></li>
							<li><a data-toggle="tab" href="#tab1">Smartphones</a></li>
							<li><a data-toggle="tab" href="#tab1">Cameras</a></li>
							<li><a data-toggle="tab" href="#tab1">Accessories</a></li>
						</ul>
					</div> *@
				</div>
			</div>
			<!-- /section title -->
			<!-- Products tab & slick -->
			<div class="col-md-12">
				<div class="row">
					<div class="products-tabs">
						<!-- tab -->
						<div id="tab1" class="tab-pane active">
							<div class="products-slick" data-nav="#slick-nav-1">
								<!--Database product-->
								@{
									var duration = DateTime.Now.AddDays(-25);

									var newItems = Model.Items.Where(item => Model.ItemDetails
									.Any(newItemDetail => newItemDetail.ItemDetailsId == item.ItemDetailsId))
									.Select(item => new
									{
										ItemId = item.ItemId,
										ItemName = item.ItemName,
										SalesPrice = item.SalesPrice,
										CategoryId = item.CategoryId,
										ItemType = item.ItemType,
										ItemDetailsId = item.ItemDetailsId,
										ImagePath = item.ImagePath,
										Description = item.Description,
										DiscountPercent = Model.ItemDiscounts
											.Where(itemDiscount => itemDiscount.ItemId == item.ItemId)
											.Select(itemDiscount => itemDiscount.DiscountPercent).FirstOrDefault(),
										CreatedDate = Model.ItemDetails
											.Where(itemDetail => itemDetail.ItemDetailsId == item.ItemDetailsId)
											.Select(itemDetail => itemDetail.CreatedDate).FirstOrDefault(),
										SoldQuantity = topSelling
											.Where(tSelling => tSelling.ItemId == item.ItemId)
											.Select(tSelling => tSelling.TotalSold).DefaultIfEmpty(0).FirstOrDefault(0)
										
									}).ToList();

									var newItemDetails = newItems.Where(x => x.CreatedDate >= duration)
										.OrderBy(x => x.CreatedDate).TakeLast(10).ToList();

									}
								

								@foreach (var item in newItemDetails)
								{
									dynamic itemPrice;
									if (item.DiscountPercent == 0 || item.DiscountPercent == null)
										itemPrice = item.SalesPrice;
									else
										itemPrice = item.SalesPrice - (item.SalesPrice * item.DiscountPercent / 100);

									<div class="product">
										<div class="product-img">
											<img src="~/Uploads/Items/@item.ImagePath" alt="">
											<div class="product-label">
												<span class="sale">-@(item.DiscountPercent)%</span>
												<span class="new">NEW</span>
											</div>
										</div>
										<div class="product-body">
											<p class="product-category">@item.ItemType</p>
											<h3 class="product-name"><a href="/Item/Index?id=@item.ItemId">@item.ItemName</a></h3>
											<h4 class="product-price">L.E. @(Math.Round(itemPrice, 2))<del class="product-old-price">L.E. @item.SalesPrice</del></h4>
											<div class="product-rating">
												<i class="fa fa-star"></i>
												<i class="fa fa-star"></i>
												<i class="fa fa-star"></i>
												<i class="fa fa-star"></i>
												<i class="fa fa-star"></i>
											</div>
											<div class="product-btns">
												 												
												<button class="add-to-wishlist"><i class="fa fa-heart-o"></i><span class="tooltipp">add to wishlist</span></button>
												@*<button class="add-to-compare"><i class="fa fa-exchange"></i><span class="tooltipp">add to compare</span></button>
												*@												
												<button class="quick-view">
													<a asp-action="Index" asp-controller="Item" asp-route-id="@item.ItemId">
														<i class="fa fa-eye"></i>
													</a>

													<span class="tooltipp">quick view</span>
												</button>
											</div>
										</div>
										<div class="add-to-cart">
											<button class="add-to-cart-btn"><i class="fa fa-shopping-cart"></i> add to cart</button>
										</div>
									</div>
								}

								<!---------------------------------->
								<!-- product -->
								
								<!-- /product -->
							</div>
							<div id="slick-nav-1" class="products-slick-nav"></div>
						</div>
						<!-- /tab -->
					</div>
				</div>
			</div>
			<!-- Products tab & slick -->
		</div>
		<!-- /row -->
	</div>
	<!-- /container -->
</div>
<!-- /SECTION -->
<!-- HOT DEAL SECTION -->
<div id="hot-deal" class="section">
	<!-- container -->
	<div class="container">
		<!-- row -->
		<div class="row">
			<div class="col-md-12">
				<div class="hot-deal" id="countdown">
					<ul class="hot-deal-countdown">
						<li>
							<div>
								<h3 id="days">@days</h3>
								<span>Days</span>
							</div>
						</li>
						<li>
							<div>
								<h3 id="hours">@hours</h3>
								<span>Hours</span>
							</div>
						</li>
						<li>
							<div>
								<h3 id="minutes">@minutes</h3>
								<span>Mins</span>
							</div>
						</li>
						<li>
							<div>
								<h3 id ="seconds">@seconds</h3>
								<span>Secs</span>
							</div>
						</li>
					</ul>
					<h2 class="text-uppercase">hot deal this week</h2>
					<p>New Collection Up to 50% OFF</p>
					<a class="primary-btn cta-btn" href="#">Shop now</a>

					<script type="text/javascript">
						var days = @days;
						var hours = @hours;
						var minutes = @minutes;
						var seconds = @seconds;

						// Function to update the countdown every second
						var countdownFunction = setInterval(function () {
							if (seconds > 0) {
								seconds--;
							} 
							else {
								if (minutes > 0) {
									minutes--;
									seconds = 59;
								} else if (hours > 0) {
									hours--;
									minutes = 59;
									seconds = 59;
								} else if (days > 0) {
									days--;
									hours = 23;
									minutes = 59;
									seconds = 59;
								} else {
									clearInterval(countdownFunction);
									document.getElementById("countdown").innerHTML = "EXPIRED";
								}
							}

							// Update the displayed values
							document.getElementById("days").innerHTML = days.toString().padStart(2, '0');
							document.getElementById("hours").innerHTML = hours.toString().padStart(2, '0');
							document.getElementById("minutes").innerHTML = minutes.toString().padStart(2, '0');
							document.getElementById("seconds").innerHTML = seconds.toString().padStart(2, '0');
						}, 1000);
					</script>

				</div>
			</div>
		</div>
		<!-- /row -->
	</div>
	<!-- /container -->
</div>
<!-- /HOT DEAL SECTION -->
<!-- SECTION -->
<div class="section">
	<!-- container -->
	<div class="container">
		<!-- row -->
		<div class="row">

			<!-- section title -->
			<div class="col-md-12">
				<div class="section-title">
					<h3 id="top" class="title">Top selling</h3>
					@*< div class="section-nav">
						<ul class="section-tab-nav tab-nav">
							<li class="active"><a data-toggle="tab" href="#tab2">Laptops</a></li>
							<li><a data-toggle="tab" href="#tab2">Smartphones</a></li>
							<li><a data-toggle="tab" href="#tab2">Cameras</a></li>
							<li><a data-toggle="tab" href="#tab2">Accessories</a></li>
						</ul>
					</div> *@
				</div>
			</div> 
			<!-- /section title -->
			<!-- Products tab & slick -->
			<div class="col-md-12">
				<div class="row">
					<div class="products-tabs">
						<!-- tab -->
						<div id="tab2" class="tab-pane fade in active">
							<div class="products-slick" data-nav="#slick-nav-2">
								<!--DBProducts-->

								@{
									var topSellingItems = newItems.Where(x => x.SoldQuantity > 0)
										.OrderByDescending(x => x.SoldQuantity).Take(10).ToList();
								}

								@foreach (var item in topSellingItems)
								{
									dynamic itemPrice;
									if (item.DiscountPercent == 0 || item.DiscountPercent == null)
										itemPrice = item.SalesPrice;
									else
										itemPrice = item.SalesPrice - (item.SalesPrice * item.DiscountPercent / 100);

									<div class="product">
										<div class="product-img">
											<img src="~/Uploads/Items/@item.ImagePath" alt="">
											<div class="product-label">
												<span class="sale">-@(item.DiscountPercent)%</span>
												@if(newItemDetails.Any(i => i.ItemId == item.ItemId))
													{<span class="new">NEW</span>}
											</div>
										</div>
										<div class="product-body">
											<p class="product-category">@item.ItemType</p>
											<h3 class="product-name">
												<a asp-action="index" asp-controller="Item" asp-route-id="@item.ItemId" >@item.ItemName</a>
											</h3>
											<h4 class="product-price">L.E. @(Math.Round(itemPrice, 2))<del class="product-old-price">L.E. @item.SalesPrice</del></h4>
											<div class="product-rating">
												<i class="fa fa-star"></i>
												<i class="fa fa-star"></i>
												<i class="fa fa-star"></i>
												<i class="fa fa-star"></i>
												<i class="fa fa-star"></i>
											</div>
											<div class="product-btns">
																							
												<button class="add-to-wishlist"><i class="fa fa-heart-o"></i><span class="tooltipp">add to wishlist</span></button>
												@* <button class="add-to-compare"><i class="fa fa-exchange"></i><span class="tooltipp">add to compare</span></button> *@
											
												
													<button class="quick-view">
														<a asp-action="index" asp-controller="Item" asp-route-id="@item.ItemId"><i class="fa fa-eye"></i></a>
														<span class="tooltipp">quick view</span>
													</button>
												
											</div>
										</div>
										<div class="add-to-cart">
											<button class="add-to-cart-btn"><i class="fa fa-shopping-cart"></i> add to cart</button>
										</div>
									</div>
								}

								<!---------------------------------->

								<!-- product -->

								<!-- /product -->
							</div>
							<div id="slick-nav-2" class="products-slick-nav"></div>
						</div>
						<!-- /tab -->
					</div>
				</div>
			</div>
			<!-- /Products tab & slick -->
		</div>
		<!-- /row -->
	</div>
	<!-- /container -->
</div>
<!-- /SECTION -->
<!-- SECTION -->

<!-- /SECTION -->
<!-- NEWSLETTER -->
<div id="newsletter" class="section">
	<!-- container -->
	<div class="container">
		<!-- row -->
		<div class="row">
			<div class="col-md-12">
				<div class="newsletter">
					<p>Sign Up for the <strong>NEWSLETTER</strong></p>
					<form>
						<input class="input" type="email" placeholder="Enter Your Email">
						<button class="newsletter-btn"><i class="fa fa-envelope"></i> Subscribe</button>
					</form>
					<ul class="newsletter-follow">
						<li>
							<a href="#"><i class="fa fa-facebook"></i></a>
						</li>
						<li>
							<a href="#"><i class="fa fa-twitter"></i></a>
						</li>
						<li>
							<a href="#"><i class="fa fa-instagram"></i></a>
						</li>
						<li>
							<a href="#"><i class="fa fa-pinterest"></i></a>
						</li>
					</ul>
				</div>
			</div>
		</div>
		<!-- /row -->
	</div>
	<!-- /container -->
</div>
<!-- /NEWSLETTER -->
